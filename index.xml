<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>zayn_lie&#39;s blog</title>
        <link>https://zayn7lie.github.io/</link>
        <description>Recent content on zayn_lie&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 06 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://zayn7lie.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>How to play Arknights on Linux, using MAA and key mapping</title>
        <link>https://zayn7lie.github.io/posts/misc/arknights/</link>
        <pubDate>Sun, 06 Aug 2023 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/posts/misc/arknights/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;Note. This guide is written under Arch Linux&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;android-emulator-or-container&#34;&gt;Android Emulator or Container?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Emulator
&lt;ul&gt;
&lt;li&gt;Pros: Safety from good separation with system, cross-platform, user-friendly.&lt;/li&gt;
&lt;li&gt;Cons: High system resources usage, easily stuck.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Container
&lt;ul&gt;
&lt;li&gt;Pros: Good mosaic with system, less resource usage, running fluently.&lt;/li&gt;
&lt;li&gt;Cons: Complex dependents, more bugs, fewer options&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have a clear mind about the needs and choose one option for running Arknights.&lt;/p&gt;
&lt;h3 id=&#34;emulator&#34;&gt;Emulator&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Note. Arknights needs about 3G + 7G storage, above 24G is recommended. RAM has less requirement, but above 8G is still recommended.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;avd-android-virtual-device-the-project-under-android-studiohttpsdeveloperandroidcomstudio&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;AVD&lt;/code&gt; (&lt;code&gt;Android Virtual Device&lt;/code&gt;, the project under &lt;code&gt;Android Studio&lt;/code&gt;)&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;AVD originally is used for debugging in Android Studio, but the complete version of Android and functions people also use it as an emulator for games.&lt;/p&gt;
&lt;p&gt;Download and Install &lt;a class=&#34;link&#34; href=&#34;https://developer.android.com/studio&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;Android Studio&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;$ yay -S android-studio&lt;/code&gt; in Arch Linux), &lt;code&gt;More Actions&lt;/code&gt; &amp;gt; &lt;code&gt;Virtual Device Manager&lt;/code&gt;, &lt;code&gt;Create device&lt;/code&gt;, and then you could modify emulator by yourself. Android 11 with 16:9 resolution is recommended for &lt;code&gt;MAA&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&#34;genymotionhttpswwwgenymotioncomdownload&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.genymotion.com/download/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;Genymotion&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Note. Arknights of Bilibili version always break while using &lt;code&gt;Genymotion&lt;/code&gt;, you could have a try in your device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.genymotion.com/download/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;Genymotion&lt;/code&gt; offers AppImage (Installer) version&lt;/a&gt; that can run directly.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Genymotion&lt;/code&gt; is not a free software which have watermark using free version. After register, choose Android 11 and above then install (Android 11 and above have x86_64 structure)&lt;/p&gt;
&lt;h3 id=&#34;container&#34;&gt;Container&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Waydroid&lt;/code&gt; is highly recommended. It is not recommended to use container while using WM that is not run on &lt;code&gt;Wayland&lt;/code&gt;. After fixing several bugs of &lt;code&gt;Anbox&lt;/code&gt;, I found that numerous API have changed. And Xdroid is too buggy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Waydroid&lt;/code&gt; dependence installation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;linux-zen&lt;/code&gt; kernel: Highly recommend for desktop computer for the kernel has several optimizations for gaming. But it will increase battery usage.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dkms&lt;/code&gt; only: Recommend for laptop. &lt;code&gt;$ yay -S binder_linux-dkms&lt;/code&gt;. If missing headers, install &lt;code&gt;$ sudo pacman -S linux-headers&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Waydroid&lt;/code&gt; installation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Follow &lt;a class=&#34;link&#34; href=&#34;https://docs.waydro.id/usage/install-on-desktops&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this instruction&lt;/a&gt; and install depending on your distro. Then &lt;code&gt;$ waydroid init&lt;/code&gt;. If report RE, check dependence installation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;waydroid show-full-ui&lt;/code&gt; enter Android directly.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;arknights-installation&#34;&gt;Arknights Installation&lt;/h3&gt;
&lt;p&gt;Although most emulators and containers are able to install directly through dragging &lt;code&gt;.apk&lt;/code&gt; to UI, we could also install it using &lt;code&gt;adb&lt;/code&gt; which is required by &lt;code&gt;MAA&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;adb&lt;/code&gt; installation
&lt;ul&gt;
&lt;li&gt;If you use &lt;code&gt;Android Studio&lt;/code&gt;, you could find &lt;code&gt;adb&lt;/code&gt; under &lt;code&gt;~/Android/emulator/platform-tools&lt;/code&gt;. You could run shell under the path directly. As for others, &lt;code&gt;$ sudo pacman -S android-tools&lt;/code&gt; or install &lt;code&gt;adb&lt;/code&gt; in other distros.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ adb devices&lt;/code&gt; check your emulator or container is in the list. If not, please check &lt;code&gt;Android Debug Bridge&lt;/code&gt; is enable in &lt;code&gt;Developer Options&lt;/code&gt; in Android.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install Arknights using &lt;code&gt;adb&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ adb install foo&lt;/code&gt;, foo is the path of &lt;code&gt;.apk&lt;/code&gt; package.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;key-mapping&#34;&gt;Key Mapping&lt;/h2&gt;
&lt;p&gt;The logic of pause deployment is that click back 🔙 will change the statue of Pause or Unpause. Thus, after dragging out operator, we pass the pause command then we could deploy while game is pause.&lt;/p&gt;
&lt;h3 id=&#34;keymapper-android-apphttpsgithubcomkeymapperorgkeymapperreleases&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/keymapperorg/KeyMapper/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;KeyMapper Android App&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After concerning a lot about how to achieve key mapping on PC, why don&amp;rsquo;t we try to do this on our Android? There are a huge bunch of software, but KeyMapper is the most lightweight and compatible though it pauses developing.&lt;/p&gt;
&lt;h3 id=&#34;qtscrcpyhttpsgithubcombarry-ranqtscrcpyreleases&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/barry-ran/QtScrcpy/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;QtScrcpy&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Origins from &lt;a class=&#34;link&#34; href=&#34;https://github.com/Genymobile/scrcpy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;scrcpy&lt;/code&gt;&lt;/a&gt; of Genymobile, an open-source software copy screen from Android to PC. &lt;code&gt;QtScrcpy&lt;/code&gt; add key mapping function from it.&lt;/p&gt;
&lt;h3 id=&#34;python-script-using-apis-of-pynput&#34;&gt;Python Script (Using APIs of &lt;code&gt;pynput&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Genymobile/scrcpy/issues/712#issuecomment-536564578&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Sample&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;maa&#34;&gt;MAA&lt;/h2&gt;
&lt;p&gt;We have described in &lt;a class=&#34;link&#34; href=&#34;https://maa.plus/docs/en-us/1.5-EMULATOR_SUPPORTS_FOR_LINUX.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this link&lt;/a&gt; clearly. If you want to add something you could make comment or PR directly.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Reading</title>
        <link>https://zayn7lie.github.io/posts/english/reading/</link>
        <pubDate>Sun, 30 Jul 2023 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/posts/english/reading/</guid>
        <description>&lt;h2 id=&#34;why&#34;&gt;WHY&lt;/h2&gt;
&lt;h3 id=&#34;why-should-we-use-verb-and-logic-to-read-a-passage&#34;&gt;Why should we use verb and logic to read a passage?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;VERB is the key to the core of a sentence.&lt;/li&gt;
&lt;li&gt;LOGIC helps us to fully understand a passage.&lt;/li&gt;
&lt;li&gt;The combination of VERB and LOGIC helps us to catch the main idea of a passage in the most efficient approach.&lt;/li&gt;
&lt;li&gt;The questions of TOEFL Reading are coming from the logic of passages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what&#34;&gt;WHAT&lt;/h2&gt;
&lt;h3 id=&#34;verb&#34;&gt;Verb&lt;/h3&gt;
&lt;p&gt;From &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Verb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Wikipedia&lt;/a&gt;: A verb (from Latin verbum &amp;lsquo;word&amp;rsquo;) is a word (part of speech) that in syntax generally conveys an action (bring, read, walk, run, learn), an occurrence (happen, become), or a state of being (be, exist, stand).&lt;/p&gt;
&lt;p&gt;To abstract? We could simply understand verb is a kind of &lt;em&gt;action&lt;/em&gt; or &lt;em&gt;attitude&lt;/em&gt; (occurrence or a state of being, it is because these two verbs contain &lt;em&gt;positive&lt;/em&gt;, &lt;em&gt;neutral&lt;/em&gt; that is always used in definition or &lt;em&gt;negative&lt;/em&gt; attitude).&lt;/p&gt;
&lt;p&gt;Only using verb could help us a sentence meaning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I washed the car yesterday. -&amp;gt; Action: washed&lt;/li&gt;
&lt;li&gt;John studies English and French. -&amp;gt; Action: studies&lt;/li&gt;
&lt;li&gt;Barack Obama became the President of the United States in 2009. -&amp;gt; Action: became or Attitude: be positive&lt;/li&gt;
&lt;li&gt;Mike Trout is a center fielder. -&amp;gt; Attitude: neutral (definition)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;logic&#34;&gt;Logic&lt;/h3&gt;
&lt;p&gt;Every passage especially in TOEFL Reading has a target. Reading passage with logic help us to reach the target without missing any point:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introducing object: Why we should know? What is this thing? How do we use this thing?&lt;/li&gt;
&lt;li&gt;Introducing process: Introducing the object in the process; beginning -&amp;gt; midterm -&amp;gt; ending; some exceptions&lt;/li&gt;
&lt;li&gt;Opinions Argument: Opinion 1&amp;rsquo;s strength and weakness -&amp;gt; solving weakness then Opinion 2&amp;rsquo;s strength and new weakness -&amp;gt; Opinion 3 &amp;hellip;&lt;/li&gt;
&lt;li&gt;Comparing object: What is the same things? What are the differences? What is the interaction?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, Logic words are also been supposed to notice. Logic words help us to understand the connection between sentences and paragraphs.&lt;/p&gt;
&lt;p&gt;BTW, the words with ‘s’ could also be a &amp;rsquo;logic word&amp;rsquo;. It implies that there will be parallel logic in the following content.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;HOW&lt;/h2&gt;
&lt;h3 id=&#34;how-to-read-the-passages&#34;&gt;How to read the passages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Beginning paragraph/Background/Target&lt;/li&gt;
&lt;li&gt;Main sentence/idea of a paragraph&lt;/li&gt;
&lt;li&gt;Connection between paragraph&lt;/li&gt;
&lt;li&gt;Ending paragraph/Conclusion&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;how-to-solve-the-questions&#34;&gt;How to solve the questions&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>Hyprland</title>
        <link>https://zayn7lie.github.io/posts/linux/hyprland/</link>
        <pubDate>Sat, 22 Jul 2023 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/posts/linux/hyprland/</guid>
        <description>&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;p&gt;Easy to install: &lt;code&gt;$ sudo pacman -S hyprland&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;config&#34;&gt;Config&lt;/h2&gt;
&lt;h3 id=&#34;basic&#34;&gt;Basic&lt;/h3&gt;
&lt;h4 id=&#34;io&#34;&gt;IO&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Disable Mouse Acceleration: add &lt;code&gt;force_no_accel = true&lt;/code&gt; to &lt;code&gt;input{}&lt;/code&gt; in &lt;code&gt;~/.config/hypr/hyprland.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Authorization: &lt;code&gt;polkit-gnome&lt;/code&gt;, then add &lt;code&gt;exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1&lt;/code&gt; to &lt;code&gt;~/.config/hypr/hyprland.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Desktop Manager (Could this be called Desktop?): &lt;code&gt;sddm&lt;/code&gt;, then &lt;code&gt;$ sudo systemctl enable sddm&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;system&#34;&gt;System&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SWAPFILE&lt;/code&gt; creation: &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/Swap#Swap_file&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.archlinux.org/title/Swap#Swap_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rog-control-center&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;appearance&#34;&gt;Appearance&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Theme Control: &lt;code&gt;qt5ct qt6ct&lt;/code&gt; &lt;code&gt;xfce4-settings&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Set &lt;code&gt;/etc/environment&lt;/code&gt;: &lt;code&gt;QT_QPA_PLATFORMTHEME=qt5ct&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Screen Lock: &lt;code&gt;swaylock-effect&lt;/code&gt;, then bind hotkey using &lt;code&gt;bind = $mainMod, L, exec, swaylock # lock the screen: swaylock-effect&lt;/code&gt; in &lt;code&gt;~/.config/hypr/hyprland.conf&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Swaylock-effect&lt;/code&gt; configuration: &lt;code&gt;~/.config/swaylock/config&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;background/Wallpaper: &lt;code&gt;swaybg&lt;/code&gt;, then add &lt;code&gt;exec-once = swaybg -m fill -i ?{~/Pictures/Wallpapers/ArchLinux.png} to ~/.config/hypr/hyprland.conf&lt;/code&gt; (&lt;code&gt;?{}&lt;/code&gt; is the path to your background picture)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Topbar&lt;/code&gt;: &lt;code&gt;waybar&lt;/code&gt;, then add &lt;code&gt;exec-once = waybar&lt;/code&gt; to &lt;code&gt;~/.config/hypr/hyprland.conf&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;waybar&lt;/code&gt; configuration file: &lt;code&gt;~/.config/waybar/config&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Fonts: &lt;code&gt;ttf-ubuntu-font-family&lt;/code&gt;, &lt;code&gt;ttf-fira-code&lt;/code&gt;, &lt;code&gt;noto-fonts noto-fonts-cjk noto-fonts-emoji&lt;/code&gt;, &lt;code&gt;ttf-nerd-fonts-symbols-mono&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Icons: &lt;code&gt;papirus-icon-theme&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;media&#34;&gt;Media&lt;/h3&gt;
&lt;h4 id=&#34;image&#34;&gt;Image&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Screenshot: &lt;code&gt;swappy grim slurp&lt;/code&gt;, then bind hotkey: &lt;code&gt;bind = $mainMod SHIFT, S, exec, grim -g &amp;quot;$(slurp)&amp;quot; - | swappy -f - # screenshot: swappy, grim, slurp&lt;/code&gt; in &lt;code&gt;~/.config/hypr/hyprland.conf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;work&#34;&gt;Work&lt;/h3&gt;
&lt;h4 id=&#34;input&#34;&gt;Input&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Method: &lt;code&gt;fcitx5&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Basis: &lt;code&gt;fcitx5-im fcitx5-chinese-addons&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI: &lt;code&gt;fcitx5-nord&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/etc/environment&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-env&#34; data-lang=&#34;env&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GTK_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;QT_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XMODIFIERS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;@im&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SDL_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;writing&#34;&gt;Writing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Code: &lt;code&gt;code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Paper: &lt;code&gt;zotero&lt;/code&gt;AUR&lt;/li&gt;
&lt;li&gt;Blog: &lt;code&gt;hugo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;social&#34;&gt;Social&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Email: &lt;code&gt;evolution evolution-on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Chat: &lt;code&gt;telegram-desktop discord&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Meeting: &lt;code&gt;zoom&lt;/code&gt;AUR&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;game&#34;&gt;Game&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Steam: &lt;code&gt;steam&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;enable &lt;code&gt;multilib&lt;/code&gt;: &lt;code&gt;/etc/pacman.conf&lt;/code&gt; - &lt;code&gt;[multilib]&lt;/code&gt; - uncomment &lt;code&gt;Include = /etc/pacman.d/mirrorlist&lt;/code&gt;
refresh: &lt;code&gt;$ sudo pacman -Syy&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>XFCE</title>
        <link>https://zayn7lie.github.io/posts/linux/xfce/</link>
        <pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/posts/linux/xfce/</guid>
        <description>&lt;p&gt;XFCE is a more lightweight Desktop Environment (or Common Environment) and it will use less RAM and CPU, which are able to make my laptop battery life longer (about 8~12 hours for normal use).&lt;/p&gt;
&lt;p&gt;XFCE is clean and easy to customize. You can install lots of plugins for XFCE and make it like Gnome or KDE but have less CPU use than Gnome and KDE. And it is cleaner as well.&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Note. It is not necessary and recommended installing &lt;code&gt;xorg&lt;/code&gt; independently looking forward to lightweight. Some packages from &lt;code&gt;xorg&lt;/code&gt; group would install automatically as the dependent packages of XFCE&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;# pacman -S xfce4&lt;/code&gt; to install XFCE. It is NOT recommended that you can &lt;code&gt;# echo &amp;quot;exec startxfce4&amp;quot; &amp;gt;&amp;gt; /etc/X11/xinit/xinitrc&lt;/code&gt; to start &lt;code&gt;xfce4&lt;/code&gt; in the next boot and ignore step 3. It is highly recommended installing a display manager (DM) to start your system because DM will start your system more proper and create a user locker for log in as well.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;# pacman -S lightdm lightdm-gtk-greeter light-locker&lt;/code&gt; to install this recommended lightweight &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/Display_manager&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DM&lt;/a&gt;, then &lt;code&gt;# systemctl enable lightdm&lt;/code&gt; to let &lt;code&gt;lightdm&lt;/code&gt; start automatically when you boot your system. You can also choose your DM. P.S. &lt;code&gt;lightdm&lt;/code&gt; is the main DM, &lt;code&gt;lightdm-gtk-greeter&lt;/code&gt; is for configuring your &lt;code&gt;lightdm&lt;/code&gt;, &lt;code&gt;light-loceker&lt;/code&gt; is for that you can lock your screen with your settings.&lt;/p&gt;
&lt;h2 id=&#34;config&#34;&gt;Config&lt;/h2&gt;
&lt;h3 id=&#34;system&#34;&gt;System&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AUR manager: &lt;code&gt;yay&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;download &lt;a class=&#34;link&#34; href=&#34;https://aur.archlinux.org/packages/yay&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;snapshot&lt;/a&gt;, &lt;code&gt;$ makepkg&lt;/code&gt;, &lt;code&gt;$ sudo pacman -U *.pkg.tar.zst&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gnome Keyring: &lt;code&gt;gnome-keyring&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Power Management: &lt;code&gt;tlp&lt;/code&gt;, &lt;code&gt;tlp-rdw&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Network Management: &lt;code&gt;network-manager-applet&lt;/code&gt;, &lt;code&gt;networkmanager-openconnect&lt;/code&gt; (because of some bug, &lt;a class=&#34;link&#34; href=&#34;https://archive.archlinux.org/packages/n/networkmanager-openconnect/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;1.2.8&lt;/code&gt;&lt;/a&gt; is recommended)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Folder Management: &lt;code&gt;gvfs&lt;/code&gt;, &lt;code&gt;gvfs-mtp&lt;/code&gt; for mobile connection, &lt;code&gt;thunar-archive-plugin file-roller&lt;/code&gt; for compress function&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;edit&lt;/code&gt; &amp;gt; &lt;code&gt;Configure custom actions&lt;/code&gt; &amp;gt; &lt;code&gt;open terminal here&lt;/code&gt;: &lt;code&gt;exo-open --working-directory %f --launch TerminalEmulator&lt;/code&gt; &amp;gt; &lt;code&gt;xfce4-terminal --tab --drop-down --working-directory=%f&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Resource Monitor: &lt;code&gt;xfce4-taskmanager&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Terminal: &lt;code&gt;xfce4-terminal --drop-down&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Light-locker: &lt;code&gt;/etc/lightdm/lightdm-gtk-greeter.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;[&lt;/span&gt;greeter&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;background&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;share&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;backgrounds&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;xfce&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;Laterano.png
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#user-background=
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;theme-name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Adwaita-dark
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;icon-theme-name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ePapirus-Dark
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;font-name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Ubuntu 11
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xft-antialias&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xft-dpi&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;128
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xft-hintstyle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;hintfull
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xft-rgba&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Desktop&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;HiDPI&lt;/code&gt;: &lt;code&gt;Application&lt;/code&gt; - &lt;code&gt;Settings&lt;/code&gt; - &lt;code&gt;Appearance&lt;/code&gt; : &lt;code&gt;DPI&lt;/code&gt; 128&lt;/li&gt;
&lt;li&gt;Fonts: &lt;code&gt;ttf-ubuntu-font-family&lt;/code&gt;, &lt;code&gt;ttf-fira-code&lt;/code&gt;, &lt;code&gt;noto-fonts noto-fonts-cjk noto-fonts-emoji&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Icons: &lt;code&gt;papirus-icon-theme&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;media&#34;&gt;Media&lt;/h3&gt;
&lt;h4 id=&#34;sound&#34;&gt;Sound&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Basis: &lt;code&gt;pipewire-pulse pipewire-alsa pipewire-jack pipewire alsa-utils&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI: &lt;code&gt;xfce4-pulseaudio-plugin&lt;/code&gt;, &lt;code&gt;pavucontrol&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Noise suppression: &lt;a class=&#34;link&#34; href=&#34;https://github.com/werman/noise-suppression-for-voice&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;noise-suppression-for-voice&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;~/.config/pipewire/pipewire.conf.d/99-input-denoising.conf&lt;/code&gt;, then &lt;code&gt;$ systemctl restart --user pipewire.service&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;context.modules &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{   name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; libpipewire-module-filter-chain
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        node.description &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Noise Canceling source&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        media.name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Noise Canceling source&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        filter.graph &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            nodes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    type &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ladspa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rnnoise
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    plugin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;usr&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;lib&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;ladspa&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;librnnoise_ladspa.so
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; noise_suppressor_mono
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    control &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;VAD Threshold (%)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 50.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;VAD Grace Period (ms)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 200
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Retroactive VAD Grace (ms)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        capture.props &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            node.name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;capture.rnnoise_source&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            node.passive &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            audio.rate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 48000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        playback.props &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            node.name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rnnoise_source&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            media.class &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Audio&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/&lt;/span&gt;Source
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            audio.rate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 48000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Music Player: &lt;code&gt;audacious&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;video&#34;&gt;Video&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Video Player: &lt;code&gt;vlc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Recording &amp;amp; Steaming: &lt;code&gt;obs-studio&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit: &lt;code&gt;flowblade&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;image&#34;&gt;Image&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Screenshot: &lt;code&gt;flameshot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit: &lt;code&gt;krita inkscape&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;View: &lt;code&gt;ristretto&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;work&#34;&gt;Work&lt;/h3&gt;
&lt;h4 id=&#34;input&#34;&gt;Input&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Method: &lt;code&gt;fcitx5&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Basis: &lt;code&gt;fcitx5-im fcitx5-chinese-addons&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI: &lt;code&gt;fcitx5-nord&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/etc/environment&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-env&#34; data-lang=&#34;env&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GTK_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;QT_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;XMODIFIERS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;@im&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SDL_IM_MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fcitx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;writing&#34;&gt;Writing&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Code: &lt;code&gt;code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Paper: &lt;code&gt;zotero&lt;/code&gt;AUR&lt;/li&gt;
&lt;li&gt;Blog: &lt;code&gt;hugo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;social&#34;&gt;Social&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Email: &lt;code&gt;evolution evolution-on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Chat: &lt;code&gt;telegram-desktop discord&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Meeting: &lt;code&gt;zoom&lt;/code&gt;AUR&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;game&#34;&gt;Game&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Steam: &lt;code&gt;steam&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;enable &lt;code&gt;multilib&lt;/code&gt;: &lt;code&gt;/etc/pacman.conf&lt;/code&gt; - &lt;code&gt;[multilib]&lt;/code&gt; - uncomment &lt;code&gt;Include = /etc/pacman.d/mirrorlist&lt;/code&gt;
refresh: &lt;code&gt;$ sudo pacman -Syy&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Arch Linux Installation</title>
        <link>https://zayn7lie.github.io/posts/linux/archlinux/</link>
        <pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/posts/linux/archlinux/</guid>
        <description>&lt;h2 id=&#34;quick-ref-eg-for-me-do-not-read-this-part-if-first-installation-look-at-the-how-part&#34;&gt;Quick Ref e.g. for me (Do NOT read this part if first installation, look at the &lt;code&gt;HOW&lt;/code&gt; part)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;installation medium:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ ls -l /dev/disk/by-id/usb-*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo wipefs --all /dev/disk/by-id/usb-SanDisk_Cruzer_Force_4C531000491008113131-0:0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ dd bs=4M if=/home/zayn7lie/Downloads/archlinux-2023.08.01-x86_64.iso of=/dev/disk/by-id/usb-SanDisk_Cruzer_Force_4C531000491008113131-0:0 conv=fsync oflag=direct status=progress&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Network&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# iwctl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[iwd]# station wlan0 get-networks&lt;/code&gt;, &lt;code&gt;[iwd]# station wlan0 connect ${SSID}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[iwd]# exit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# hwclock --systohc --utc&lt;/code&gt;, &lt;code&gt;# timedatectl set-ntp true&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disk Mounting and Installation&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# fdisk -l&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# mkfs.ext4 /dev/?{nvme0n1p4}&lt;/code&gt;, &lt;code&gt;# mount /dev/?{nvme0n1p4} /mnt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# mkdir -p /mnt/boot&lt;/code&gt;, &lt;code&gt;# mount /dev/?{nvme0n1p1} /mnt/boot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# lsblk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# pacstrap /mnt base base-devel linux linux-firmware e2fsprogs ntfs-3g vim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab&lt;/code&gt;, &lt;code&gt;# cat /mnt/etc/fstab&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;User Setting&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;# arch-chroot /mnt /bin/bash&lt;/code&gt;, &lt;code&gt;# passwd&lt;/code&gt;, &lt;code&gt;# echo zayn7lie-acl &amp;gt; /etc/hostname&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;# useradd -m -G wheel -s /bin/bash zayn7lie&lt;/code&gt;, &lt;code&gt;# passwd zayn7lie&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;# vim /etc/sudoers&lt;/code&gt; uncomment &lt;code&gt;%wheel ALL=(ALL:ALL)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vim /etc/hosts&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hosts&#34; data-lang=&#34;hosts&#34;&gt;127.0.0.1 localhost
::1 localhost
127.0.1.1 zayn7lie-acl.localdomain zayn7lie-acl
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Language &amp;amp; Time&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# vim /etc/locale.gen&lt;/code&gt; uncomment &lt;code&gt;en-US.UTF-8 UTF-8&lt;/code&gt;, &lt;code&gt;# locale-gen&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# echo LANG=C.UTF-8 &amp;gt; /etc/locale.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Launch Setting&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# pacman -S amd-ucode grub efibootmgr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=&amp;quot;Arch Linux&amp;quot; --recheck&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Final&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# pacman -S networkmanager&lt;/code&gt;, &lt;code&gt;# systemctl enable NetworkManager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# exit&lt;/code&gt;, &lt;code&gt;# reboot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NetworkManager&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$ nmcli device wifi list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ nmcli device wifi connect ?{SSID_or_BSSID} password ?{password}&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pacman&lt;/code&gt;
&lt;ol&gt;
&lt;li&gt;Remove: &lt;code&gt;$ sudo pacman -Run(c or s) package&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Auto-clean: &lt;code&gt;$ sudo pacman -Runc $(pacman -Qdtq)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Clean Cache: &lt;code&gt;$ sudo pacman -Sc&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;why&#34;&gt;WHY&lt;/h2&gt;
&lt;h3 id=&#34;why-do-i-want-to-switch-from-windows-to-linux&#34;&gt;Why do I want to switch from Windows to Linux?&lt;/h3&gt;
&lt;p&gt;First and foremost, Linux is OPEN-SOURCE. Actually, I am an OPEN-SOURCIST. It is my hope to fully stand for open-source community.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I am able to fully customize my system. Windows have limited a large amount of options to make system fit for us. Take system fonts for example. In Linux, we could just open the config file and fill in the font we want. But in Windows, we have to deal with lots of random and unknown services to change only a system font, and then we will get a number of bugs that we cannot solve for the unknown source code.&lt;/li&gt;
&lt;li&gt;I am able to fully maximize my efficiency. If I want to install tools, I could just simply type &lt;code&gt;$ sudo pacman -S ${pachage}&lt;/code&gt; or $ &lt;code&gt;sudo apt install ${pachage}&lt;/code&gt;, and those packages’ licenses like MIT, GNU are easy to follow. But in Windows, it is time-consuming to download, depackage, install, agree to license, pay for the software, etc.&lt;/li&gt;
&lt;li&gt;I am able to debug by my self. If we encounter a bug, we could just look at the source code and fix the bug. We could also PR to the repos and improve the software together. But for some software in Windows, it is hard to figure out how the software runs.&lt;/li&gt;
&lt;li&gt;We have a large community to solve problems. In Linux, I have solved all bugs and run system smoothly without asking for any help - almost all problems and questions I encountered have been solved in Linux communities or forums.&lt;/li&gt;
&lt;li&gt;I am able to uninstall the services I do not want. In Linux, we are able to install whatever we want and uninstall (remove) whatever we do not want. But in Windows, there are so many services like SMB file transfer that I might not want to use for entire life! The total storage of Pure Arch Linux with Xfce and daily working and gaming software is below 8 G!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;why-do-i-want-to-switch-from-ubuntu-to-arch&#34;&gt;Why do I want to switch from Ubuntu to Arch?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;After using Ubuntu for several months, I have the ability to work smoothly with terminals and have basis understanding of Linux. I want to step in further, and installing Arch Linux is a good approach to that.&lt;/li&gt;
&lt;li&gt;Arch have the most complete wiki that we might be able to solve all problems there!&lt;/li&gt;
&lt;li&gt;Arch Linux has more universal package manager and various packages from different system (it might be &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/Arch_User_Repository&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AUR&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Ubuntu still have lots of services I do not know. And gnome is an anti-lightweight desktop environment which could be very annoying.&lt;/li&gt;
&lt;li&gt;Ubuntu with gnome is stepping in commercial and be less community-friendly. And there are some ads of Ubuntu Pro appear in the system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;why-do-i-want-to-install-arch-linux-without-the-script&#34;&gt;Why do I want to install Arch Linux without the script?&lt;/h3&gt;
&lt;p&gt;Learn more about Linux and fully customize for myself.&lt;/p&gt;
&lt;h2 id=&#34;what&#34;&gt;WHAT&lt;/h2&gt;
&lt;p&gt;Here is an introduction of Arch Linux from its wiki: &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/Arch_Linux&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.archlinux.org/title/Arch_Linux&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;HOW&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Note. This guide is just a simplification, clarification and modification based &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/Installation_guide&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Arch Linux-Installation Guide&lt;/a&gt;. If you have any questions or if I not mention or skip about some necessary steps, you could just read the wiki and find out the answer. By the way, this guide is more focusing on understanding Linux system and how a system could be installed in a machine.&lt;/p&gt;
&lt;p&gt;Every command begin with &lt;code&gt;#&lt;/code&gt; meaning it is a shell command. &lt;code&gt;#&lt;/code&gt; is always input automatically that you do not need to type it again. E.g. &lt;code&gt;# mount /dev/?{nvme0n1p4} /mnt&lt;/code&gt; you might only need to type in &lt;code&gt;mount /dev/?{nvme0n1p4} /mnt&lt;/code&gt;. &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;[iwd]#&lt;/code&gt;, etc. is also similar to &lt;code&gt;$&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Everything with &lt;code&gt;?{ }&lt;/code&gt; meaning that you could modify it based on your situation, for example &lt;code&gt;# mount /dev/?{nvme0n1p4} /mnt&lt;/code&gt; might be &lt;code&gt;# mount /dev/sd1 /mnt&lt;/code&gt; for you. Everything with &lt;code&gt;!{ }&lt;/code&gt; meaning that you could not to type this based on your situation. E.g. &lt;code&gt;# arch-chroot /mnt !{/bin/bash}&lt;/code&gt; you might only need to run &lt;code&gt;# arch-chroot /mnt&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1-preparation&#34;&gt;1. Preparation&lt;/h3&gt;
&lt;p&gt;A target machine that you want to install system to. A computer with 16 GB or above disk and AMD or Intel CPU is recommended. (P.S. High RAM is highly recommended. In this guide, I would not introduce how to create SWAP partition because my 16 GB RAM is enough for daily use.)&lt;/p&gt;
&lt;p&gt;A USB flash drive (storage device) that could be modified. A USB with 8 GB or larger is recommended.&lt;/p&gt;
&lt;p&gt;An available network that is able to access to Arch Linux packages. (If you are a Chinese User, this post is recommended to use.) An unhidden network is recommended.&lt;/p&gt;
&lt;h3 id=&#34;2-making-an-installation-medium&#34;&gt;2. Making an Installation Medium&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Windows User&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select one release from &lt;a class=&#34;link&#34; href=&#34;https://geo.mirror.pkgbuild.com/iso/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://geo.mirror.pkgbuild.com/iso/&lt;/a&gt; that is ending with &lt;code&gt;.iso&lt;/code&gt; or just download the standard release from &lt;a class=&#34;link&#34; href=&#34;https://geo.mirror.pkgbuild.com/iso/2023.06.01/archlinux-x86_64.iso&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://geo.mirror.pkgbuild.com/iso/2023.06.01/archlinux-x86_64.iso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Rufus for installing installation image.&lt;/li&gt;
&lt;li&gt;Plug in your medium and using Rufus to install.&lt;/li&gt;
&lt;li&gt;Reboot with your medium and enter BIOS or UEFI.&lt;/li&gt;
&lt;li&gt;Select the installation medium and get into Arch Linux installation and select the first option.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux User&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Select one release from &lt;a class=&#34;link&#34; href=&#34;https://geo.mirror.pkgbuild.com/iso/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://geo.mirror.pkgbuild.com/iso/&lt;/a&gt; that is ending with &lt;code&gt;.iso&lt;/code&gt; or just download the standard release from &lt;a class=&#34;link&#34; href=&#34;https://geo.mirror.pkgbuild.com/iso/2023.06.01/archlinux-x86_64.iso&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://geo.mirror.pkgbuild.com/iso/2023.06.01/archlinux-x86_64.iso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# dd bs=4M if=?{path/to/archlinux-version-x86_64.iso} of=?{/dev/disk/by-id/usb-My_flash_drive} conv=fsync oflag=direct status=progress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Reboot with your medium and enter BIOS or UEFI.&lt;/li&gt;
&lt;li&gt;Select the installation medium and get into Arch Linux installation and select the first option.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-network-configuration&#34;&gt;3. Network Configuration&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Note. The installation medium have installed &lt;code&gt;iwd&lt;/code&gt; tool. Although &lt;code&gt;networkmanager&lt;/code&gt; is more popular in Arch Linux network settings, &lt;code&gt;iwd&lt;/code&gt; is the default network settings tool for installation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# iwctl&lt;/code&gt; to enter iwd tool.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[iwd]# device list&lt;/code&gt; to check your network device. You need to remember your device name and type into ?{wlan0} in the following commands.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[iwd]# station ?{wlan0} get-networks&lt;/code&gt; to check your networks and remember your SSID to type into following ${SSID}&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[iwd]# station ?{wlan0} connect ${SSID}&lt;/code&gt; to connect to SSID, you might need to type password after connect to it.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[iwd]# exit&lt;/code&gt; to exit the network tool.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4-disk-mounting-and-installation&#34;&gt;4. Disk Mounting and Installation&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Note. Mounting disk partitions to installation medium enable we to modify partitions through installation medium. You need to prepare at least two partitions - one at least 150 M as your starting partition and another above 16 G is recommended for your main Arch Linux System.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# fdisk -l&lt;/code&gt; to check your partitions of disk.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# mkfs.ext4 /dev/?{nvme0n1p4}&lt;/code&gt; to format a partition to ext4 file system for your main Arch Linux System Installation. If you want to install Dual-systems, do not run the following commands: &lt;code&gt;# mkfs.vfat -F32 /dev/?{nvme0n1p1}&lt;/code&gt; to format a partition to fat32 file system for the boot partition.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# mount /dev/?{nvme0n1p4} /mnt&lt;/code&gt;, &lt;code&gt;# mkdir -p /mnt/boot&lt;/code&gt;, &lt;code&gt;# mount /dev/?{nvme0n1p1} /mnt/boot&lt;/code&gt; to connect disk partitions to the installation medium.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# lsblk&lt;/code&gt; to check your mounting situation. If this not meet your condition, you could modify by &lt;code&gt;# unmount /dev/?{nvme0n1p4} /mnt&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# pacstrap /mnt base !{base-devel} ?{linux} linux-firmware e2fsprogs !{ntfs-3g} ?{vim} !{linux-headers}&lt;/code&gt; to install basis Arch Linux. &lt;code&gt;base-devel&lt;/code&gt; contains &lt;code&gt;makepkg&lt;/code&gt; that is necessary for installing AUR packages. You can install the Linux kernels that you want through &lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/kernel&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.archlinux.org/title/kernel&lt;/a&gt;. &lt;code&gt;linux-firmware&lt;/code&gt; is necessary Linux kernel firmware. &lt;code&gt;e2fsprogs&lt;/code&gt; is for configuration of ext4 file system. &lt;code&gt;ntfs-3g&lt;/code&gt; is for configuration of NTFS (Windows File System) file system. &lt;code&gt;vim&lt;/code&gt; if for latter file editing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab&lt;/code&gt; to generate a &lt;code&gt;fstab&lt;/code&gt; file for Linux file tree viewing. It is safer to &lt;code&gt;# cat /mnt/etc/fstab&lt;/code&gt; to check whether file is generated properly. P.S. Difference between &amp;raquo; and &amp;gt;: &amp;raquo; is appending (add) to the end of the file, &amp;gt; is replacing the file.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-user-setting&#34;&gt;5. User Setting&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# arch-chroot /mnt /bin/bash&lt;/code&gt; to change root to &lt;code&gt;/mnt&lt;/code&gt; (root user path) using shell in &lt;code&gt;/bin/bash&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# passwd&lt;/code&gt; to reset the root user password.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# echo ?{zayn7lie-acl} &amp;gt; /etc/hostname&lt;/code&gt; to reset your machine name.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# useradd -m -G wheel -s /bin/bash ${zayn7lie}&lt;/code&gt; set up a new user &lt;code&gt;${zayn7lie}&lt;/code&gt;, set it log in directory and add to wheel group. &lt;code&gt;# passwd ${zayn7lie}&lt;/code&gt; to set user’s password. P.S. Wheel group users are used to update system (like a wheel to update continuously)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# vim /etc/sudoers&lt;/code&gt; to open config file using vim. Type i to enter insert(edit) mode for vim and then find and uncomment (delete &lt;code&gt;#&lt;/code&gt;) before &lt;code&gt;%wheel ALL=(ALL:ALL) ALL&lt;/code&gt;. Then &lt;code&gt;esc&lt;/code&gt; to escape from insert mode and &lt;code&gt;:wq&lt;/code&gt; to write in (save) and quit. P.S. &lt;code&gt;:wq!&lt;/code&gt; and &lt;code&gt;:q!&lt;/code&gt; the &lt;code&gt;!&lt;/code&gt; means force. &lt;code&gt;:wq!&lt;/code&gt; will force writing in (If the file is unchangeable, it will create a new file and replace it.), and &lt;code&gt;:q!&lt;/code&gt; will force you to quite without any change of the file.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# vim /etc/hosts&lt;/code&gt; to config localhost settings. Insert:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hosts&#34; data-lang=&#34;hosts&#34;&gt;127.0.0.1 localhost
::1 localhost
127.0.1.1 ?{zayn7lie-acl}.localdomain ?{zayn7lie-acl}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Replace &lt;code&gt;?{zayn7lie-acl}&lt;/code&gt; with your machine name.&lt;/p&gt;
&lt;h3 id=&#34;6-language--time&#34;&gt;6. Language &amp;amp; Time&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# vim /etc/locale.gen&lt;/code&gt; to enter language config file, then uncomment &lt;code&gt;en-US.UTF-8 UTF-8&lt;/code&gt; and the language you want use, then save the file. # locale-gen to generate and install language files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# echo LANG=C.UTF-8 &amp;gt; /etc/locale.conf&lt;/code&gt; make system default characters to characters in C.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# hwclock --systohc --utc&lt;/code&gt; and &lt;code&gt;# timedatectl set-ntp true&lt;/code&gt; to update your system time to installation medium time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# ln -sf /usr/share/zoneinfo/?{EST} /etc/localtime&lt;/code&gt; to config your local time. &lt;code&gt;?{EST}&lt;/code&gt; Could be change based on your region. You can use &lt;code&gt;# ls /usr/share/zoneinfo/&lt;/code&gt; to check which option could be used. Some folder like ./Asia might have subfolders that you need to choose in more specific way. E.G. &lt;code&gt;# ln -sf /usr/share/zoneinfo/Asia/Hong_Kong /etc/localtime&lt;/code&gt;. P.S. s meaning soft link which will not actually copy all file to the target folder, f meaning force to do it.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;7-launch-setting&#34;&gt;7. Launch Setting&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;# pacman -S ?{amd-ucode} grub efibootmgr&lt;/code&gt; to install necessary boot package. If you are using Intel CPU, change &lt;code&gt;?{amd-ucode}&lt;/code&gt; to &lt;code&gt;intel-ucode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# grub-install !{--removable} --target=x86_64-efi --efi-directory=/boot --bootloader-id=?{&amp;quot;Arch Linux&amp;quot;} --recheck&lt;/code&gt; to install grub file. &lt;code&gt;!{--removable}&lt;/code&gt; determines whether you are able to remove it from UEFI, &lt;code&gt;?{&amp;quot;Arch Linux&amp;quot;}&lt;/code&gt; is your system name in grub.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;# grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt; to generate config file.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;8-misc&#34;&gt;8. Misc&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;# pacman -S networkmanager&lt;/code&gt; to install NetworkManager tool, then &lt;code&gt;# systemctl enable NetworkManager&lt;/code&gt; to let &lt;code&gt;NetworkManager&lt;/code&gt; start automatically when you boot your system. As I have mentioned above, &lt;code&gt;networkmanager&lt;/code&gt; is more popular than &lt;code&gt;iwd&lt;/code&gt;. And &lt;code&gt;iwd&lt;/code&gt; is only installed in your installation medium but not your system. You still have to install a network manager tool for your &lt;code&gt;Arch Linux&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;finish-installation&#34;&gt;Finish Installation&lt;/h3&gt;
&lt;p&gt;Congratulation! You have installed Arch Linux in your machine. Now you can &lt;code&gt;# exit&lt;/code&gt; to exit your root user account, &lt;code&gt;# reboot&lt;/code&gt; and remove installation medium when computer is completely closed. Now, start your journey to &lt;code&gt;Arch Linux&lt;/code&gt;!&lt;/p&gt;
&lt;h3 id=&#34;post-installation&#34;&gt;Post-installation&lt;/h3&gt;
&lt;p&gt;If you encounter any problems or bugs, reading &lt;a class=&#34;link&#34; href=&#34;https://archlinux.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Wiki&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://www.google.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;googling&lt;/a&gt; (&lt;a class=&#34;link&#34; href=&#34;https://duckduckgo.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DDG&lt;/a&gt; is a better option with high privacy protection), searching in the forums or communities are both good options. But remember that if you want to ask a question, please ask in &lt;a class=&#34;link&#34; href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;a smart way&lt;/a&gt;. That’s all, it is my best hope that you could join and enjoy our open-source communities!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>C&#43;&#43; Basic - 01 Function</title>
        <link>https://zayn7lie.github.io/posts/cpp-algorithm/basic-01function/</link>
        <pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/posts/cpp-algorithm/basic-01function/</guid>
        <description>&lt;h2 id=&#34;why-why-shouldnt-we-learn-from-hello-world-first&#34;&gt;WHY: Why shouldn&amp;rsquo;t we learn from &lt;code&gt;&amp;quot;Hello, world&amp;quot;&lt;/code&gt; first?&lt;/h2&gt;
&lt;p&gt;I believe many people are confused about the reason we start from function instead of popular &lt;code&gt;&amp;quot;Hello, world&amp;quot;&lt;/code&gt;. It is because &lt;code&gt;&amp;quot;Hello, world&amp;quot;&lt;/code&gt; program is too difficult to beginner.&lt;/p&gt;
&lt;p&gt;Some people might still be confused with &lt;em&gt;difficult&lt;/em&gt;, then let&amp;rsquo;s have a review of the program first:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, world!&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; std;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cout &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; endl;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At the first sight of these, you possibly confused about what &lt;code&gt;include&lt;/code&gt; is, what is included in &lt;code&gt;namespace&lt;/code&gt;, why we should add &lt;code&gt;int main()&lt;/code&gt;, etc. But your professor would possibly reply that don&amp;rsquo;t ask, remember first?&lt;/p&gt;
&lt;p&gt;As a science subject that is focusing on logic, I am opposed with such an unlogical way to study. What is more, &lt;code&gt;&amp;quot;Hello, world&amp;quot;&lt;/code&gt; program is used for testing compiler instead of learning. Thus, I prefer to start with an easier program with less confusing things:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To be more accurate, this is not a &lt;em&gt;program&lt;/em&gt; but a &lt;em&gt;function&lt;/em&gt; that is supposed to be the beginning for beginner.&lt;/p&gt;
&lt;h2 id=&#34;what&#34;&gt;WHAT&lt;/h2&gt;
&lt;h3 id=&#34;what-is-function&#34;&gt;What is function?&lt;/h3&gt;
&lt;p&gt;Ref. &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Function_%28mathematics%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Wikipedia&lt;/a&gt;: In mathematics, a &lt;strong&gt;function&lt;/strong&gt; from a set $X$ to a set $Y$ assigns to each element of $X$ exactly one element of $Y$.&lt;/p&gt;
&lt;p&gt;Too abstract? Just understand that &lt;code&gt;Function&lt;/code&gt; is a &amp;ldquo;machine&amp;rdquo; containing some functions. E.g. $f(x) = x + 1$ machine $f(x)$ contains a function that could help to add 1 to input.&lt;/p&gt;
&lt;p&gt;Then, you might find that all math or cs questions could be turned into functions with different complexity like $f(g(x) + h(y) \cdot u(z))$. And if we turn this into a language that computer could understand, it is a &lt;em&gt;program&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Now, you might understand why should we start from function. Function, is the most basic logic under program. Or, &lt;em&gt;all programs are consisted by functions&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;what-is-the-components-of-function&#34;&gt;What is the components of function?&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s have a review of the previous function: &lt;code&gt;int f(int x){return x + 1;}&lt;/code&gt;, which equals to $f(x) = x + 1$ in mathematics. It&amp;rsquo;s time to fully understand this function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int&lt;/code&gt;: tell computer (declare) that the output ($f(x)$) and input ($x$) are integers. We have to tell computer every variable&amp;rsquo;s type so that the computer could store it properly.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(int x)&lt;/code&gt;: input value. In the following program we could call this function by just using &lt;code&gt;f(1)&lt;/code&gt;, &lt;code&gt;f(2)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;return&lt;/code&gt;: tell computer that the function next is to output the value followed by &lt;code&gt;return&lt;/code&gt; and then function would be terminated.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;;&lt;/code&gt;: separate different commends in the function.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ }&lt;/code&gt;: to &amp;ldquo;pack&amp;rdquo; the function.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You might have an overview of function now, then let&amp;rsquo;s move to a more complex function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; bestNum;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    bestNum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bestNum;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; a;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    bestNum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; bestNum;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Line 1: At this time, we declare two things, &lt;code&gt;function()&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt;, as integers. You might find that we do not use &lt;code&gt;f()&lt;/code&gt; this time, we use &lt;code&gt;function()&lt;/code&gt; instead. Right, and &lt;code&gt;function&lt;/code&gt; is better than &lt;code&gt;f&lt;/code&gt; because while reading code, people could easier to get programmers&amp;rsquo; points.&lt;/p&gt;
&lt;p&gt;Line 2 &amp;amp; 3: &lt;code&gt;int bestNum = 7&lt;/code&gt; in short (and preferred). As I have mentioned above, &lt;code&gt;bestNum&lt;/code&gt; is better than &lt;code&gt;bn&lt;/code&gt; or just &lt;code&gt;b&lt;/code&gt; because we could understand it better. In this point, we declare &lt;code&gt;bestNum&lt;/code&gt; is an integer and &lt;em&gt;assign&lt;/em&gt; &lt;code&gt;7&lt;/code&gt; to &lt;code&gt;bestNum&lt;/code&gt;. Let me describe two things: how do the name of &lt;code&gt;bestNum&lt;/code&gt; come and what is &lt;em&gt;assign&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;camelCase&lt;/code&gt;: while writing a variable, we cannot divide the terms into separated words for computer cannot recognize it correctly like we cannot write &lt;code&gt;camelCase&lt;/code&gt; to &lt;code&gt;camel case&lt;/code&gt;. In this case, we have several ways to name this like &lt;code&gt;camel_case&lt;/code&gt;, &lt;code&gt;camel-case&lt;/code&gt;, &lt;code&gt;CamelCase&lt;/code&gt;. But &lt;code&gt;camelCase&lt;/code&gt; is one of the wide-use approach for its high efficiency. And the name of the naming method is &lt;em&gt;Camel Case&lt;/em&gt;. And &lt;code&gt;num&lt;/code&gt; is &lt;code&gt;number&lt;/code&gt; in short. There is also some abbr like &lt;code&gt;ans&lt;/code&gt; refer to &lt;code&gt;answer&lt;/code&gt;, &lt;code&gt;cnt&lt;/code&gt; refer to &lt;code&gt;counter&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt;: &lt;code&gt;=&lt;/code&gt; does not mean &lt;em&gt;equal&lt;/em&gt;, but &lt;em&gt;assign&lt;/em&gt;. &lt;em&gt;Equal&lt;/em&gt; is a kind of &lt;em&gt;judgement&lt;/em&gt; (We will learn it later about &lt;code&gt;==&lt;/code&gt;), but &lt;em&gt;Assign&lt;/em&gt; is a kind of &lt;em&gt;calculation&lt;/em&gt;. To fully understand this, let&amp;rsquo;s look deeper into computer memory. When we declare variables, the computer will give every variable some memory for store number like computer will give &lt;code&gt;int&lt;/code&gt; 32 bits (4 bytes) to store and give &lt;code&gt;long long int&lt;/code&gt; 64 bits to store which means &lt;code&gt;long long int&lt;/code&gt; is able to store larger integer. Every type use only &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; to store number thus when we assign, many &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; change to store the number when we assign to the variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Line 4: We assign the number store in &lt;code&gt;bestNum&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;. And remember, &lt;code&gt;a&lt;/code&gt; is not a preferred name. When we write program, please make it more specific.&lt;/p&gt;
&lt;p&gt;Line 5: We assign the number that store in &lt;code&gt;a&lt;/code&gt; and then times two to &lt;code&gt;a&lt;/code&gt;. We calculate the number at the right of &lt;code&gt;=&lt;/code&gt; first and then assign the number we calculated to the left variable.&lt;/p&gt;
&lt;p&gt;Line 6: We assign the number store in &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;bestNum&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Line 7: The overall function &lt;code&gt;function()&lt;/code&gt; returns an integer number &lt;code&gt;bestNum&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In a nutshell, the function of &lt;code&gt;function()&lt;/code&gt; is that first assigning $7$ to &lt;code&gt;bestNum&lt;/code&gt; that we declare as an integer, then assign &lt;code&gt;bestNum&lt;/code&gt; to &lt;code&gt;a&lt;/code&gt;, then assign the number that &lt;code&gt;a&lt;/code&gt; times $2$ to &lt;code&gt;a&lt;/code&gt;, then assign &lt;code&gt;a&lt;/code&gt; back to &lt;code&gt;bestNum&lt;/code&gt;, finally returns &lt;code&gt;bestNum&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You might find that there is no point to input &lt;code&gt;a&lt;/code&gt; for it will be &amp;lsquo;refreshed&amp;rsquo; or assigned with another number &lt;code&gt;bestNum&lt;/code&gt; in line 4. So we could rewrite line 1: &lt;code&gt;int function() {&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you could get the points in the nutshell, then congratulation that you stepped in c++ now. But you might still be confused about although there is no CE (Compile-time Error) but RE (Runtime Error). Which the function that the overall program start with?&lt;/p&gt;
&lt;h3 id=&#34;the-main-function-of-a-program---main-function&#34;&gt;The main function of a program - &lt;code&gt;main()&lt;/code&gt; function&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; y) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; y;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f(a, b);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is a program without input and output (We will take about how to input and output in terminal next course). Let&amp;rsquo;s have an analysis of this function:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The program begins from &lt;code&gt;main()&lt;/code&gt;, but why do we write from &lt;code&gt;f()&lt;/code&gt;? It is because every function is supposed to be known before usage (When solving math problems, we are also supposed to clarify the function of every function before usage).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;return 0&lt;/code&gt; of the &lt;code&gt;main()&lt;/code&gt; does not mean that the whole program would return 0 after running - &lt;code&gt;0&lt;/code&gt; in C++ means that the whole program runs without problem.&lt;/li&gt;
&lt;li&gt;You might notice that in this time, &lt;code&gt;f()&lt;/code&gt; have two parameters, it is valid. (It is also valid in mathematics)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you could get the point, let&amp;rsquo;s forward to a more .complicated program:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; i;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; h(i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ...;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    f(i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Could you tell the sequence of this program?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;main&lt;/code&gt; -&amp;gt; &lt;code&gt;f&lt;/code&gt; -&amp;gt; &lt;code&gt;h&lt;/code&gt; (return) -&amp;gt; &lt;code&gt;f&lt;/code&gt; -&amp;gt; &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It is a &lt;code&gt;stack&lt;/code&gt; structure, which we put &lt;code&gt;main&lt;/code&gt; in the bottom first, then &lt;code&gt;f&lt;/code&gt;, then &lt;code&gt;h&lt;/code&gt;. When we want to return, we also have to pick from the top first: &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;f&lt;/code&gt; then &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;stack&lt;/code&gt; structure, which is defined as LIFO, Last In First Out, is widely use in algorithm, computer hardware, etc. We will gain a deeper sight of this in the following courses.&lt;/p&gt;
&lt;h2 id=&#34;how-how-to-write-a-program&#34;&gt;HOW: How to write a Program?&lt;/h2&gt;
&lt;h3 id=&#34;begin-with-main-is-a-good-habit&#34;&gt;Begin with &lt;code&gt;main()&lt;/code&gt; is a good habit&lt;/h3&gt;
&lt;p&gt;From the knowledge we have learned above, every program contains a &lt;code&gt;main()&lt;/code&gt; function.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;sentence&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We know that the return value of &lt;code&gt;main()&lt;/code&gt; is not important. But why do we declare &lt;code&gt;main&lt;/code&gt; as integer instead of other type like boolean &lt;code&gt;bool&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;At the beginning, I hope to improve the &lt;em&gt;answer searching ability&lt;/em&gt; for everyone.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;For the question &lt;em&gt;why do we declare main function as int in c++?&lt;/em&gt;, we abstract the keywords: &lt;code&gt;why declare&lt;/code&gt;(question) &lt;code&gt;main&lt;/code&gt;(target 1) &lt;code&gt;int&lt;/code&gt;(target 2) &lt;code&gt;c++&lt;/code&gt;(field)&lt;/li&gt;
&lt;li&gt;Choose a platform for searching: &lt;a class=&#34;link&#34; href=&#34;https://www.google.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Google&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://duckduckgo.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;DuckDuckGo&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Stack Overflow&lt;/a&gt;, and other forums.&lt;/li&gt;
&lt;li&gt;Type in the keywords and search.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;More about how to get the answer: &lt;a class=&#34;link&#34; href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How To Ask Questions The Smart Way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After several searching, you might find the answer: &lt;code&gt;The short answer, is because the C++ standard requires main() to return int . As you probably know, the return value from the main() function is used by the runtime library as the exit code for the process. Both Unix and Win32 support the concept of a (small) integer returned from a process after it has finished.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In short, this is a regulation when C++ was created. When program return 0 everything goes well.&lt;/p&gt;
&lt;p&gt;I use this case to emphasize that the purpose of my blog is not &lt;em&gt;finding answer&lt;/em&gt; but &lt;em&gt;getting better understanding and logic for specific knowledge&lt;/em&gt;. I hope everyone could follow &lt;a class=&#34;link&#34; href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How To Ask Questions The Smart Way&lt;/a&gt; before asking questions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The first thing to understand is that hackers actually like hard problems and good, thought-provoking questions about them. If we didn&amp;rsquo;t, we wouldn&amp;rsquo;t be here. If you give us an interesting question to chew on we&amp;rsquo;ll be grateful to you; good questions are a stimulus and a gift. Good questions help us develop our understanding, and often reveal problems we might not have noticed or thought about otherwise. Among hackers, “Good question!” is a strong and sincere compliment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, we know how to create a structure of a program, then what about calculation?&lt;/p&gt;
&lt;h3 id=&#34;arithmetic&#34;&gt;Arithmetic&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Basic &lt;code&gt;+ - * /&lt;/code&gt; could be use directly. E.g. &lt;code&gt;int a = 5 - 3;&lt;/code&gt;, &lt;code&gt;float b = 3 / 6&lt;/code&gt; (float is a type could store float number). But notice that &lt;code&gt;/&lt;/code&gt; still cannot divide with &lt;code&gt;0&lt;/code&gt;. Although there is no CE, but RE will happen while running the program.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt; We have clarified that &lt;code&gt;=&lt;/code&gt; is not &lt;em&gt;equal&lt;/em&gt; but &lt;em&gt;assign&lt;/em&gt; as an arithmetic.&lt;/li&gt;
&lt;li&gt;Mod calculation: &lt;code&gt;%&lt;/code&gt;. E.g. &lt;code&gt;int a = 8 % 3; // a equals 2&lt;/code&gt; (&lt;code&gt;//&lt;/code&gt; is a comment sign. The content after &lt;code&gt;//&lt;/code&gt; will not be compiled and run. &lt;code&gt;/*content*/&lt;/code&gt; is similar to &lt;code&gt;//&lt;/code&gt;, but you can comment for several lines.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;practice&#34;&gt;Practice&lt;/h2&gt;
&lt;p&gt;As the first practice, I will declare that how to use &lt;code&gt;practice&lt;/code&gt; to improve ourselves.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Practice&lt;/code&gt; has three levels: &lt;code&gt;KNOW&lt;/code&gt;, &lt;code&gt;UNDERSTAND&lt;/code&gt;, &lt;code&gt;MASTER&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;KNOW&lt;/code&gt; focuses on the content itself of the posts, which is necessary for basis. Figuring out &lt;code&gt;KNOW&lt;/code&gt; means that you fully read the post in this course. If you cannot solve &lt;code&gt;KNOW&lt;/code&gt;, please read the post carefully again without distraction.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UNDERSTAND&lt;/code&gt; makes some modification with content itself and parameters, which is necessary for next learning. Figuring out &lt;code&gt;UNDERSTAND&lt;/code&gt; means that you gain your own understanding while reading the post. If you cannot solve &lt;code&gt;UNDERSTAND&lt;/code&gt;, please conclude the post and find out what you miss in this course, you could ask search engine for help as well.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MASTER&lt;/code&gt; explores deeper into knowledge and content, which is necessary for mastering C++ and next learning for algorithm. Figuring out &lt;code&gt;MASTER&lt;/code&gt; means that you get every point of the post and build your would logical system of learning C++. If you cannot solve &lt;code&gt;MASTER&lt;/code&gt;, you could read the answer directly and then understand how the answer works. After that, re-answer the question again.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;know&#34;&gt;KNOW&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f(a);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Find the value of &lt;code&gt;a&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt; equals 2.&lt;/p&gt;
&lt;h3 id=&#34;understand&#34;&gt;UNDERSTAND&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;h&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;g&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; h(x);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;f&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; x){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; g(h(x));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f(a);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Find the sequence of the functions and value of &lt;code&gt;a&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;main&lt;/code&gt; -&amp;gt; &lt;code&gt;f&lt;/code&gt; -&amp;gt; &lt;code&gt;h&lt;/code&gt;(brackets have a higher privilege for calculation) -&amp;gt; &lt;code&gt;g&lt;/code&gt; -&amp;gt; &lt;code&gt;h&lt;/code&gt;(return) -&amp;gt; &lt;code&gt;g&lt;/code&gt; -&amp;gt; &lt;code&gt;f&lt;/code&gt; -&amp;gt; &lt;code&gt;main&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt; equals 1.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;master&#34;&gt;MASTER&lt;/h3&gt;
&lt;p&gt;Write a function &lt;code&gt;switch(int a, int b)&lt;/code&gt; that could switch the value stored in &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, then returns &lt;code&gt;a&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;switch&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; b){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; b;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Blog Constructing</title>
        <link>https://zayn7lie.github.io/posts/misc/blog_constr/</link>
        <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/posts/misc/blog_constr/</guid>
        <description>&lt;h2 id=&#34;test&#34;&gt;Test&lt;/h2&gt;
&lt;h3 id=&#34;_test&#34;&gt;_Test&lt;/h3&gt;
&lt;p&gt;Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!&lt;/p&gt;
&lt;p&gt;For more information about this theme, check the documentation: &lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.stack.jimmycai.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Want a site like this? Check out &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack-starter&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo-theme-stack-stater&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a class=&#34;link&#34; href=&#34;https://unsplash.com/@pawel_czerwinski&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pawel Czerwinski&lt;/a&gt; on &lt;a class=&#34;link&#34; href=&#34;https://unsplash.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>About</title>
        <link>https://zayn7lie.github.io/page/about/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/page/about/</guid>
        <description>&lt;h2 id=&#34;zayn-lie&#34;&gt;Zayn Lie&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Account: zayn7lie (Email: &lt;code&gt;$ echo &amp;quot;emF5bjdsaWUuYmVyNytibG9nQGdtYWlsLmNvbQo=&amp;quot; | base64 -d&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Background: New York University&lt;/li&gt;
&lt;li&gt;Field: Mostly focusing on theory and basis of Mathematics, Computer Science, Data Science (Machine Learning).&lt;/li&gt;
&lt;li&gt;Habits: Arch Linux User (with XFCE), Osu!, Arknights, open world game (e.g. Unturned, Terraria, Minecraft)&lt;/li&gt;
&lt;li&gt;Principle: Idealism, Open-sourcism, Pacifism, Logicism, Anti-nationalism&lt;/li&gt;
&lt;li&gt;Style: Hardcore, Artcore, Hard Renascence&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;泽忚&#34;&gt;泽忚&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;账号：zayn7lie, zayn_lie, zaynXlie (邮箱：&lt;code&gt;$ echo &amp;quot;emF5bjdsaWUuYmVyNytibG9nQGdtYWlsLmNvbQo=&amp;quot; | base64 -d&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;学历：目前就读于 New York University ， Mathematics, Computer Science, Data Science 专业方向。&lt;/li&gt;
&lt;li&gt;领域：偏理论研究类蒟蒻，喜欢有挑战性的算法和数学问题，并曾喜欢游荡于各大竞赛（ Google Code Jam ， CodeForce 等），又菜又爱玩。最近开始研究机器学习，研究机器学习解释性相关问题，入门 Kaggle 竞赛。&lt;/li&gt;
&lt;li&gt;爱好： Arch Linux 用户（桌面环境 XFCE ）， Osu! ，明日方舟，部分开放式游戏（ Unturned, Terraria, Minecraft 等）&lt;/li&gt;
&lt;li&gt;观念：理想主义，开源主义，和平主义，逻辑主义，反民族主义&lt;/li&gt;
&lt;li&gt;风格：热爱音乐伦理与音游，对于 BMS 的音乐有着无可抗拒的诱惑力。喜欢 Hardcore, Artcore, Hard Renascence 风格电子乐、交响乐和钢琴曲；凯尔特和华丽日式的合奏；混有例如皮卡第三度突出和弦的音乐。特别重视旋律，但不怎么在乎节奏。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://zayn7lie.github.io/page/archives/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/page/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Links</title>
        <link>https://zayn7lie.github.io/page/links/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/page/links/</guid>
        <description>&lt;p&gt;Note. The Friend Connections section aims at connecting and expanding different open-source communities. I am happy to share links mutually with anyone having created their own posts with high quality. If you want to create friend connections mutually with me, please contact me with Blog Email in About section using following format (Please remove the example comments after completion):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog Name&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;description&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog Description&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;website&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog url&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blog Image url&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As for my link:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zayn_lie&amp;#39;s blog&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;description&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Algorithm&amp;amp;Mathematics, Music_Theory&amp;amp;Rhythm_Game, Rationality&amp;amp;Logicism, Peace&amp;amp;Open_Source&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;website&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://zayn7lie.github.io/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://zayn7lie.github.io/img/avatar_hu52bce724e28e271956cf86328aabb587_401403_300x0_resize_box_3.png&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Search</title>
        <link>https://zayn7lie.github.io/page/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/page/search/</guid>
        <description></description>
        </item>
        <item>
        <title>Sponsor</title>
        <link>https://zayn7lie.github.io/page/sponsor/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://zayn7lie.github.io/page/sponsor/</guid>
        <description>&lt;p&gt;Note. My Blog offers free helps if you follow this article: &lt;a class=&#34;link&#34; href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.catb.org/~esr/faqs/smart-questions.html&lt;/a&gt;.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
