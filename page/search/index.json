[{"content":" Note. This guide is written under Arch Linux\nAndroid Emulator or Container? Emulator Pros: Safety from good separation with system, cross-platform, user-friendly. Cons: High system resources usage, easily stuck. Container Pros: Good mosaic with system, less resource usage, running fluently. Cons: Complex dependents, more bugs, fewer options Have a clear mind about the needs and choose one option for running Arknights.\nEmulator Note. Arknights needs about 3G + 7G storage, above 24G is recommended. RAM has less requirement, but above 8G is still recommended.\nAVD (Android Virtual Device, the project under Android Studio) AVD originally is used for debugging in Android Studio, but the complete version of Android and functions people also use it as an emulator for games.\nDownload and Install Android Studio ($ yay -S android-studio in Arch Linux), More Actions \u0026gt; Virtual Device Manager, Create device, and then you could modify emulator by yourself. Android 11 with 16:9 resolution is recommended for MAA.\nGenymotion Note. Arknights of Bilibili version always break while using Genymotion, you could have a try in your device.\nGenymotion offers AppImage (Installer) version that can run directly.\nGenymotion is not a free software which have watermark using free version. After register, choose Android 11 and above then install (Android 11 and above have x86_64 structure)\nContainer Waydroid is highly recommended. It is not recommended to use container while using WM that is not run on Wayland. After fixing several bugs of Anbox, I found that numerous API have changed. And Xdroid is too buggy.\nWaydroid dependence installation\nlinux-zen kernel: Highly recommend for desktop computer for the kernel has several optimizations for gaming. But it will increase battery usage. dkms only: Recommend for laptop. $ yay -S binder_linux-dkms. If missing headers, install $ sudo pacman -S linux-headers Waydroid installation\nFollow this instruction and install depending on your distro. Then $ waydroid init. If report RE, check dependence installation. waydroid show-full-ui enter Android directly. Arknights Installation Although most emulators and containers are able to install directly through dragging .apk to UI, we could also install it using adb which is required by MAA:\nadb installation If you use Android Studio, you could find adb under ~/Android/emulator/platform-tools. You could run shell under the path directly. As for others, $ sudo pacman -S android-tools or install adb in other distros. $ adb devices check your emulator or container is in the list. If not, please check Android Debug Bridge is enable in Developer Options in Android. Install Arknights using adb $ adb install foo, foo is the path of .apk package. Key Mapping The logic of pause deployment is that click back 🔙 will change the statue of Pause or Unpause. Thus, after dragging out operator, we pass the pause command then we could deploy while game is pause.\nKeyMapper Android App After concerning a lot about how to achieve key mapping on PC, why don\u0026rsquo;t we try to do this on our Android? There are a huge bunch of software, but KeyMapper is the most lightweight and compatible though it pauses developing.\nQtScrcpy Origins from scrcpy of Genymobile, an open-source software copy screen from Android to PC. QtScrcpy add key mapping function from it.\nPython Script (Using APIs of pynput) Sample\nMAA We have described in this link clearly. If you want to add something you could make comment or PR directly.\n","date":"2023-08-06T00:00:00Z","permalink":"https://zayn7lie.github.io/posts/misc/arknights/","title":"How to play Arknights on Linux, using MAA and key mapping"},{"content":"WHY Why should we use verb and logic to read a passage? VERB is the key to the core of a sentence. LOGIC helps us to fully understand a passage. The combination of VERB and LOGIC helps us to catch the main idea of a passage in the most efficient approach. The questions of TOEFL Reading are coming from the logic of passages. WHAT Verb From Wikipedia: A verb (from Latin verbum \u0026lsquo;word\u0026rsquo;) is a word (part of speech) that in syntax generally conveys an action (bring, read, walk, run, learn), an occurrence (happen, become), or a state of being (be, exist, stand).\nTo abstract? We could simply understand verb is a kind of action or attitude (occurrence or a state of being, it is because these two verbs contain positive, neutral that is always used in definition or negative attitude).\nOnly using verb could help us a sentence meaning:\nI washed the car yesterday. -\u0026gt; Action: washed John studies English and French. -\u0026gt; Action: studies Barack Obama became the President of the United States in 2009. -\u0026gt; Action: became or Attitude: be positive Mike Trout is a center fielder. -\u0026gt; Attitude: neutral (definition) Logic Every passage especially in TOEFL Reading has a target. Reading passage with logic help us to reach the target without missing any point:\nIntroducing object: Why we should know? What is this thing? How do we use this thing? Introducing process: Introducing the object in the process; beginning -\u0026gt; midterm -\u0026gt; ending; some exceptions Opinions Argument: Opinion 1\u0026rsquo;s strength and weakness -\u0026gt; solving weakness then Opinion 2\u0026rsquo;s strength and new weakness -\u0026gt; Opinion 3 \u0026hellip; Comparing object: What is the same things? What are the differences? What is the interaction? In addition, Logic words are also been supposed to notice. Logic words help us to understand the connection between sentences and paragraphs.\nBTW, the words with ‘s’ could also be a \u0026rsquo;logic word\u0026rsquo;. It implies that there will be parallel logic in the following content.\nHOW How to read the passages Title Beginning paragraph/Background/Target Main sentence/idea of a paragraph Connection between paragraph Ending paragraph/Conclusion How to solve the questions ","date":"2023-07-30T00:00:00Z","permalink":"https://zayn7lie.github.io/posts/english/reading/","title":"Reading"},{"content":"Install Easy to install: $ sudo pacman -S hyprland\nConfig Basic IO Disable Mouse Acceleration: add force_no_accel = true to input{} in ~/.config/hypr/hyprland.conf Authorization: polkit-gnome, then add exec-once = /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 to ~/.config/hypr/hyprland.conf Desktop Manager (Could this be called Desktop?): sddm, then $ sudo systemctl enable sddm System SWAPFILE creation: https://wiki.archlinux.org/title/Swap#Swap_file rog-control-center Appearance Theme Control: qt5ct qt6ct xfce4-settings Set /etc/environment: QT_QPA_PLATFORMTHEME=qt5ct Screen Lock: swaylock-effect, then bind hotkey using bind = $mainMod, L, exec, swaylock # lock the screen: swaylock-effect in ~/.config/hypr/hyprland.conf Swaylock-effect configuration: ~/.config/swaylock/config background/Wallpaper: swaybg, then add exec-once = swaybg -m fill -i ?{~/Pictures/Wallpapers/ArchLinux.png} to ~/.config/hypr/hyprland.conf (?{} is the path to your background picture) Topbar: waybar, then add exec-once = waybar to ~/.config/hypr/hyprland.conf waybar configuration file: ~/.config/waybar/config Fonts: ttf-ubuntu-font-family, ttf-fira-code, noto-fonts noto-fonts-cjk noto-fonts-emoji, ttf-nerd-fonts-symbols-mono Icons: papirus-icon-theme Media Image Screenshot: swappy grim slurp, then bind hotkey: bind = $mainMod SHIFT, S, exec, grim -g \u0026quot;$(slurp)\u0026quot; - | swappy -f - # screenshot: swappy, grim, slurp in ~/.config/hypr/hyprland.conf Work Input Method: fcitx5 Basis: fcitx5-im fcitx5-chinese-addons\nGUI: fcitx5-nord\n/etc/environment:\nGTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS=@im=fcitx SDL_IM_MODULE=fcitx Writing Code: code Paper: zoteroAUR Blog: hugo Social Email: evolution evolution-on Chat: telegram-desktop discord Meeting: zoomAUR Game Steam: steam\nenable multilib: /etc/pacman.conf - [multilib] - uncomment Include = /etc/pacman.d/mirrorlist refresh: $ sudo pacman -Syy\n","date":"2023-07-22T00:00:00Z","permalink":"https://zayn7lie.github.io/posts/linux/hyprland/","title":"Hyprland"},{"content":"XFCE is a more lightweight Desktop Environment (or Common Environment) and it will use less RAM and CPU, which are able to make my laptop battery life longer (about 8~12 hours for normal use).\nXFCE is clean and easy to customize. You can install lots of plugins for XFCE and make it like Gnome or KDE but have less CPU use than Gnome and KDE. And it is cleaner as well.\nInstall Note. It is not necessary and recommended installing xorg independently looking forward to lightweight. Some packages from xorg group would install automatically as the dependent packages of XFCE\n# pacman -S xfce4 to install XFCE. It is NOT recommended that you can # echo \u0026quot;exec startxfce4\u0026quot; \u0026gt;\u0026gt; /etc/X11/xinit/xinitrc to start xfce4 in the next boot and ignore step 3. It is highly recommended installing a display manager (DM) to start your system because DM will start your system more proper and create a user locker for log in as well.\n# pacman -S lightdm lightdm-gtk-greeter light-locker to install this recommended lightweight DM, then # systemctl enable lightdm to let lightdm start automatically when you boot your system. You can also choose your DM. P.S. lightdm is the main DM, lightdm-gtk-greeter is for configuring your lightdm, light-loceker is for that you can lock your screen with your settings.\nConfig System AUR manager: yay\ndownload snapshot, $ makepkg, $ sudo pacman -U *.pkg.tar.zst Gnome Keyring: gnome-keyring\nPower Management: tlp, tlp-rdw\nNetwork Management: network-manager-applet, networkmanager-openconnect (because of some bug, 1.2.8 is recommended)\nFolder Management: gvfs, gvfs-mtp for mobile connection, thunar-archive-plugin file-roller for compress function\nedit \u0026gt; Configure custom actions \u0026gt; open terminal here: exo-open --working-directory %f --launch TerminalEmulator \u0026gt; xfce4-terminal --tab --drop-down --working-directory=%f Resource Monitor: xfce4-taskmanager\nTerminal: xfce4-terminal --drop-down\nLight-locker: /etc/lightdm/lightdm-gtk-greeter.conf:\n[greeter] background=/usr/share/backgrounds/xfce/Laterano.png #user-background= theme-name=Adwaita-dark icon-theme-name=ePapirus-Dark font-name=Ubuntu 11 xft-antialias=1 xft-dpi=128 xft-hintstyle=hintfull xft-rgba=none Desktop\nHiDPI: Application - Settings - Appearance : DPI 128 Fonts: ttf-ubuntu-font-family, ttf-fira-code, noto-fonts noto-fonts-cjk noto-fonts-emoji Icons: papirus-icon-theme Media Sound Basis: pipewire-pulse pipewire-alsa pipewire-jack pipewire alsa-utils\nGUI: xfce4-pulseaudio-plugin, pavucontrol\nNoise suppression: noise-suppression-for-voice:\n~/.config/pipewire/pipewire.conf.d/99-input-denoising.conf, then $ systemctl restart --user pipewire.service:\ncontext.modules = [ { name = libpipewire-module-filter-chain args = { node.description = \u0026#34;Noise Canceling source\u0026#34; media.name = \u0026#34;Noise Canceling source\u0026#34; filter.graph = { nodes = [ { type = ladspa name = rnnoise plugin = /usr/lib/ladspa/librnnoise_ladspa.so label = noise_suppressor_mono control = { \u0026#34;VAD Threshold (%)\u0026#34; = 50.0 \u0026#34;VAD Grace Period (ms)\u0026#34; = 200 \u0026#34;Retroactive VAD Grace (ms)\u0026#34; = 0 } } ] } capture.props = { node.name = \u0026#34;capture.rnnoise_source\u0026#34; node.passive = true audio.rate = 48000 } playback.props = { node.name = \u0026#34;rnnoise_source\u0026#34; media.class = Audio/Source audio.rate = 48000 } } } ] Music Player: audacious\nVideo Video Player: vlc Recording \u0026amp; Steaming: obs-studio Edit: flowblade Image Screenshot: flameshot Edit: krita inkscape View: ristretto Work Input Method: fcitx5 Basis: fcitx5-im fcitx5-chinese-addons\nGUI: fcitx5-nord\n/etc/environment:\nGTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS=@im=fcitx SDL_IM_MODULE=fcitx Writing Code: code Paper: zoteroAUR Blog: hugo Social Email: evolution evolution-on Chat: telegram-desktop discord Meeting: zoomAUR Game Steam: steam\nenable multilib: /etc/pacman.conf - [multilib] - uncomment Include = /etc/pacman.d/mirrorlist refresh: $ sudo pacman -Syy\n","date":"2023-06-21T00:00:00Z","permalink":"https://zayn7lie.github.io/posts/linux/xfce/","title":"XFCE"},{"content":"Quick Ref e.g. for me (Do NOT read this part if first installation, look at the HOW part) installation medium: $ ls -l /dev/disk/by-id/usb-* $ sudo wipefs --all /dev/disk/by-id/usb-SanDisk_Cruzer_Force_4C531000491008113131-0:0 $ dd bs=4M if=/home/zayn7lie/Downloads/archlinux-2023.08.01-x86_64.iso of=/dev/disk/by-id/usb-SanDisk_Cruzer_Force_4C531000491008113131-0:0 conv=fsync oflag=direct status=progress Network\n# iwctl [iwd]# station wlan0 get-networks, [iwd]# station wlan0 connect ${SSID} [iwd]# exit # hwclock --systohc --utc, # timedatectl set-ntp true Disk Mounting and Installation\n# fdisk -l # mkfs.ext4 /dev/?{nvme0n1p4}, # mount /dev/?{nvme0n1p4} /mnt # mkdir -p /mnt/boot, # mount /dev/?{nvme0n1p1} /mnt/boot # lsblk # pacstrap /mnt base base-devel linux linux-firmware e2fsprogs ntfs-3g vim # genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab, # cat /mnt/etc/fstab User Setting\n# arch-chroot /mnt /bin/bash, # passwd, # echo zayn7lie-acl \u0026gt; /etc/hostname\n# useradd -m -G wheel -s /bin/bash zayn7lie, # passwd zayn7lie\n# vim /etc/sudoers uncomment %wheel ALL=(ALL:ALL)\nvim /etc/hosts:\n127.0.0.1 localhost ::1 localhost 127.0.1.1 zayn7lie-acl.localdomain zayn7lie-acl Language \u0026amp; Time\n# vim /etc/locale.gen uncomment en-US.UTF-8 UTF-8, # locale-gen # echo LANG=C.UTF-8 \u0026gt; /etc/locale.conf # ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime Launch Setting\n# pacman -S amd-ucode grub efibootmgr # grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=\u0026quot;Arch Linux\u0026quot; --recheck # grub-mkconfig -o /boot/grub/grub.cfg Final\n# pacman -S networkmanager, # systemctl enable NetworkManager # exit, # reboot NetworkManager $ nmcli device wifi list $ nmcli device wifi connect ?{SSID_or_BSSID} password ?{password} pacman Remove: $ sudo pacman -Run(c or s) package Auto-clean: $ sudo pacman -Runc $(pacman -Qdtq) Clean Cache: $ sudo pacman -Sc WHY Why do I want to switch from Windows to Linux? First and foremost, Linux is OPEN-SOURCE. Actually, I am an OPEN-SOURCIST. It is my hope to fully stand for open-source community.\nI am able to fully customize my system. Windows have limited a large amount of options to make system fit for us. Take system fonts for example. In Linux, we could just open the config file and fill in the font we want. But in Windows, we have to deal with lots of random and unknown services to change only a system font, and then we will get a number of bugs that we cannot solve for the unknown source code. I am able to fully maximize my efficiency. If I want to install tools, I could just simply type $ sudo pacman -S ${pachage} or $ sudo apt install ${pachage}, and those packages’ licenses like MIT, GNU are easy to follow. But in Windows, it is time-consuming to download, depackage, install, agree to license, pay for the software, etc. I am able to debug by my self. If we encounter a bug, we could just look at the source code and fix the bug. We could also PR to the repos and improve the software together. But for some software in Windows, it is hard to figure out how the software runs. We have a large community to solve problems. In Linux, I have solved all bugs and run system smoothly without asking for any help - almost all problems and questions I encountered have been solved in Linux communities or forums. I am able to uninstall the services I do not want. In Linux, we are able to install whatever we want and uninstall (remove) whatever we do not want. But in Windows, there are so many services like SMB file transfer that I might not want to use for entire life! The total storage of Pure Arch Linux with Xfce and daily working and gaming software is below 8 G! Why do I want to switch from Ubuntu to Arch? After using Ubuntu for several months, I have the ability to work smoothly with terminals and have basis understanding of Linux. I want to step in further, and installing Arch Linux is a good approach to that. Arch have the most complete wiki that we might be able to solve all problems there! Arch Linux has more universal package manager and various packages from different system (it might be AUR). Ubuntu still have lots of services I do not know. And gnome is an anti-lightweight desktop environment which could be very annoying. Ubuntu with gnome is stepping in commercial and be less community-friendly. And there are some ads of Ubuntu Pro appear in the system. Why do I want to install Arch Linux without the script? Learn more about Linux and fully customize for myself.\nWHAT Here is an introduction of Arch Linux from its wiki: https://wiki.archlinux.org/title/Arch_Linux\nHOW Note. This guide is just a simplification, clarification and modification based Arch Linux-Installation Guide. If you have any questions or if I not mention or skip about some necessary steps, you could just read the wiki and find out the answer. By the way, this guide is more focusing on understanding Linux system and how a system could be installed in a machine.\nEvery command begin with # meaning it is a shell command. # is always input automatically that you do not need to type it again. E.g. # mount /dev/?{nvme0n1p4} /mnt you might only need to type in mount /dev/?{nvme0n1p4} /mnt. $, [iwd]#, etc. is also similar to $.\nEverything with ?{ } meaning that you could modify it based on your situation, for example # mount /dev/?{nvme0n1p4} /mnt might be # mount /dev/sd1 /mnt for you. Everything with !{ } meaning that you could not to type this based on your situation. E.g. # arch-chroot /mnt !{/bin/bash} you might only need to run # arch-chroot /mnt.\n1. Preparation A target machine that you want to install system to. A computer with 16 GB or above disk and AMD or Intel CPU is recommended. (P.S. High RAM is highly recommended. In this guide, I would not introduce how to create SWAP partition because my 16 GB RAM is enough for daily use.)\nA USB flash drive (storage device) that could be modified. A USB with 8 GB or larger is recommended.\nAn available network that is able to access to Arch Linux packages. (If you are a Chinese User, this post is recommended to use.) An unhidden network is recommended.\n2. Making an Installation Medium Windows User\nSelect one release from https://geo.mirror.pkgbuild.com/iso/ that is ending with .iso or just download the standard release from https://geo.mirror.pkgbuild.com/iso/2023.06.01/archlinux-x86_64.iso Install Rufus for installing installation image. Plug in your medium and using Rufus to install. Reboot with your medium and enter BIOS or UEFI. Select the installation medium and get into Arch Linux installation and select the first option. Linux User\nSelect one release from https://geo.mirror.pkgbuild.com/iso/ that is ending with .iso or just download the standard release from https://geo.mirror.pkgbuild.com/iso/2023.06.01/archlinux-x86_64.iso # dd bs=4M if=?{path/to/archlinux-version-x86_64.iso} of=?{/dev/disk/by-id/usb-My_flash_drive} conv=fsync oflag=direct status=progress Reboot with your medium and enter BIOS or UEFI. Select the installation medium and get into Arch Linux installation and select the first option. 3. Network Configuration Note. The installation medium have installed iwd tool. Although networkmanager is more popular in Arch Linux network settings, iwd is the default network settings tool for installation.\n# iwctl to enter iwd tool. [iwd]# device list to check your network device. You need to remember your device name and type into ?{wlan0} in the following commands. [iwd]# station ?{wlan0} get-networks to check your networks and remember your SSID to type into following ${SSID} [iwd]# station ?{wlan0} connect ${SSID} to connect to SSID, you might need to type password after connect to it. [iwd]# exit to exit the network tool. 4. Disk Mounting and Installation Note. Mounting disk partitions to installation medium enable we to modify partitions through installation medium. You need to prepare at least two partitions - one at least 150 M as your starting partition and another above 16 G is recommended for your main Arch Linux System.\n# fdisk -l to check your partitions of disk. # mkfs.ext4 /dev/?{nvme0n1p4} to format a partition to ext4 file system for your main Arch Linux System Installation. If you want to install Dual-systems, do not run the following commands: # mkfs.vfat -F32 /dev/?{nvme0n1p1} to format a partition to fat32 file system for the boot partition. # mount /dev/?{nvme0n1p4} /mnt, # mkdir -p /mnt/boot, # mount /dev/?{nvme0n1p1} /mnt/boot to connect disk partitions to the installation medium. # lsblk to check your mounting situation. If this not meet your condition, you could modify by # unmount /dev/?{nvme0n1p4} /mnt command. # pacstrap /mnt base !{base-devel} ?{linux} linux-firmware e2fsprogs !{ntfs-3g} ?{vim} !{linux-headers} to install basis Arch Linux. base-devel contains makepkg that is necessary for installing AUR packages. You can install the Linux kernels that you want through https://wiki.archlinux.org/title/kernel. linux-firmware is necessary Linux kernel firmware. e2fsprogs is for configuration of ext4 file system. ntfs-3g is for configuration of NTFS (Windows File System) file system. vim if for latter file editing. # genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab to generate a fstab file for Linux file tree viewing. It is safer to # cat /mnt/etc/fstab to check whether file is generated properly. P.S. Difference between \u0026raquo; and \u0026gt;: \u0026raquo; is appending (add) to the end of the file, \u0026gt; is replacing the file. 5. User Setting # arch-chroot /mnt /bin/bash to change root to /mnt (root user path) using shell in /bin/bash. # passwd to reset the root user password. # echo ?{zayn7lie-acl} \u0026gt; /etc/hostname to reset your machine name. # useradd -m -G wheel -s /bin/bash ${zayn7lie} set up a new user ${zayn7lie}, set it log in directory and add to wheel group. # passwd ${zayn7lie} to set user’s password. P.S. Wheel group users are used to update system (like a wheel to update continuously) # vim /etc/sudoers to open config file using vim. Type i to enter insert(edit) mode for vim and then find and uncomment (delete #) before %wheel ALL=(ALL:ALL) ALL. Then esc to escape from insert mode and :wq to write in (save) and quit. P.S. :wq! and :q! the ! means force. :wq! will force writing in (If the file is unchangeable, it will create a new file and replace it.), and :q! will force you to quite without any change of the file. # vim /etc/hosts to config localhost settings. Insert: 127.0.0.1 localhost ::1 localhost 127.0.1.1 ?{zayn7lie-acl}.localdomain ?{zayn7lie-acl} Replace ?{zayn7lie-acl} with your machine name.\n6. Language \u0026amp; Time # vim /etc/locale.gen to enter language config file, then uncomment en-US.UTF-8 UTF-8 and the language you want use, then save the file. # locale-gen to generate and install language files. # echo LANG=C.UTF-8 \u0026gt; /etc/locale.conf make system default characters to characters in C. # hwclock --systohc --utc and # timedatectl set-ntp true to update your system time to installation medium time. # ln -sf /usr/share/zoneinfo/?{EST} /etc/localtime to config your local time. ?{EST} Could be change based on your region. You can use # ls /usr/share/zoneinfo/ to check which option could be used. Some folder like ./Asia might have subfolders that you need to choose in more specific way. E.G. # ln -sf /usr/share/zoneinfo/Asia/Hong_Kong /etc/localtime. P.S. s meaning soft link which will not actually copy all file to the target folder, f meaning force to do it. 7. Launch Setting # pacman -S ?{amd-ucode} grub efibootmgr to install necessary boot package. If you are using Intel CPU, change ?{amd-ucode} to intel-ucode # grub-install !{--removable} --target=x86_64-efi --efi-directory=/boot --bootloader-id=?{\u0026quot;Arch Linux\u0026quot;} --recheck to install grub file. !{--removable} determines whether you are able to remove it from UEFI, ?{\u0026quot;Arch Linux\u0026quot;} is your system name in grub. # grub-mkconfig -o /boot/grub/grub.cfg to generate config file. 8. Misc # pacman -S networkmanager to install NetworkManager tool, then # systemctl enable NetworkManager to let NetworkManager start automatically when you boot your system. As I have mentioned above, networkmanager is more popular than iwd. And iwd is only installed in your installation medium but not your system. You still have to install a network manager tool for your Arch Linux.\nFinish Installation Congratulation! You have installed Arch Linux in your machine. Now you can # exit to exit your root user account, # reboot and remove installation medium when computer is completely closed. Now, start your journey to Arch Linux!\nPost-installation If you encounter any problems or bugs, reading Wiki, googling (DDG is a better option with high privacy protection), searching in the forums or communities are both good options. But remember that if you want to ask a question, please ask in a smart way. That’s all, it is my best hope that you could join and enjoy our open-source communities!\n","date":"2023-06-20T00:00:00Z","permalink":"https://zayn7lie.github.io/posts/linux/archlinux/","title":"Arch Linux Installation"},{"content":"WHY: Why shouldn\u0026rsquo;t we learn from \u0026quot;Hello, world\u0026quot; first? I believe many people are confused about the reason we start from function instead of popular \u0026quot;Hello, world\u0026quot;. It is because \u0026quot;Hello, world\u0026quot; program is too difficult to beginner.\nSome people might still be confused with difficult, then let\u0026rsquo;s have a review of the program first:\n#include \u0026lt;cstdio\u0026gt; int main() { printf(\u0026#34;Hello, world!\\n\u0026#34;); return 0; } or\n#include \u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026#34;Hello, world!\u0026#34; \u0026lt;\u0026lt; endl; return 0; } At the first sight of these, you possibly confused about what include is, what is included in namespace, why we should add int main(), etc. But your professor would possibly reply that don\u0026rsquo;t ask, remember first?\nAs a science subject that is focusing on logic, I am opposed with such an unlogical way to study. What is more, \u0026quot;Hello, world\u0026quot; program is used for testing compiler instead of learning. Thus, I prefer to start with an easier program with less confusing things:\nint f(int x) { return x + 1; } To be more accurate, this is not a program but a function that is supposed to be the beginning for beginner.\nWHAT What is function? Ref. Wikipedia: In mathematics, a function from a set $X$ to a set $Y$ assigns to each element of $X$ exactly one element of $Y$.\nToo abstract? Just understand that Function is a \u0026ldquo;machine\u0026rdquo; containing some functions. E.g. $f(x) = x + 1$ machine $f(x)$ contains a function that could help to add 1 to input.\nThen, you might find that all math or cs questions could be turned into functions with different complexity like $f(g(x) + h(y) \\cdot u(z))$. And if we turn this into a language that computer could understand, it is a program.\nNow, you might understand why should we start from function. Function, is the most basic logic under program. Or, all programs are consisted by functions.\nWhat is the components of function? Let\u0026rsquo;s have a review of the previous function: int f(int x){return x + 1;}, which equals to $f(x) = x + 1$ in mathematics. It\u0026rsquo;s time to fully understand this function:\nint f(int x) { return x + 1; } int: tell computer (declare) that the output ($f(x)$) and input ($x$) are integers. We have to tell computer every variable\u0026rsquo;s type so that the computer could store it properly. (int x): input value. In the following program we could call this function by just using f(1), f(2) return: tell computer that the function next is to output the value followed by return and then function would be terminated. ;: separate different commends in the function. { }: to \u0026ldquo;pack\u0026rdquo; the function. You might have an overview of function now, then let\u0026rsquo;s move to a more complex function:\nint function(int a) { int bestNum; bestNum = 7; a = bestNum; a = 2 * a; bestNum = a; return bestNum; } Line 1: At this time, we declare two things, function() and a, as integers. You might find that we do not use f() this time, we use function() instead. Right, and function is better than f because while reading code, people could easier to get programmers\u0026rsquo; points.\nLine 2 \u0026amp; 3: int bestNum = 7 in short (and preferred). As I have mentioned above, bestNum is better than bn or just b because we could understand it better. In this point, we declare bestNum is an integer and assign 7 to bestNum. Let me describe two things: how do the name of bestNum come and what is assign:\ncamelCase: while writing a variable, we cannot divide the terms into separated words for computer cannot recognize it correctly like we cannot write camelCase to camel case. In this case, we have several ways to name this like camel_case, camel-case, CamelCase. But camelCase is one of the wide-use approach for its high efficiency. And the name of the naming method is Camel Case. And num is number in short. There is also some abbr like ans refer to answer, cnt refer to counter, etc. =: = does not mean equal, but assign. Equal is a kind of judgement (We will learn it later about ==), but Assign is a kind of calculation. To fully understand this, let\u0026rsquo;s look deeper into computer memory. When we declare variables, the computer will give every variable some memory for store number like computer will give int 32 bits (4 bytes) to store and give long long int 64 bits to store which means long long int is able to store larger integer. Every type use only 0 and 1 to store number thus when we assign, many 0 and 1 change to store the number when we assign to the variable. Line 4: We assign the number store in bestNum to a. And remember, a is not a preferred name. When we write program, please make it more specific.\nLine 5: We assign the number that store in a and then times two to a. We calculate the number at the right of = first and then assign the number we calculated to the left variable.\nLine 6: We assign the number store in a to bestNum\nLine 7: The overall function function() returns an integer number bestNum.\nIn a nutshell, the function of function() is that first assigning $7$ to bestNum that we declare as an integer, then assign bestNum to a, then assign the number that a times $2$ to a, then assign a back to bestNum, finally returns bestNum.\nYou might find that there is no point to input a for it will be \u0026lsquo;refreshed\u0026rsquo; or assigned with another number bestNum in line 4. So we could rewrite line 1: int function() {\nIf you could get the points in the nutshell, then congratulation that you stepped in c++ now. But you might still be confused about although there is no CE (Compile-time Error) but RE (Runtime Error). Which the function that the overall program start with?\nThe main function of a program - main() function int f(int x, int y) { return x + y; } int main() { int a = 1; int b = 1; int c = f(a, b); return 0; } This is a program without input and output (We will take about how to input and output in terminal next course). Let\u0026rsquo;s have an analysis of this function:\nThe program begins from main(), but why do we write from f()? It is because every function is supposed to be known before usage (When solving math problems, we are also supposed to clarify the function of every function before usage). return 0 of the main() does not mean that the whole program would return 0 after running - 0 in C++ means that the whole program runs without problem. You might notice that in this time, f() have two parameters, it is valid. (It is also valid in mathematics) If you could get the point, let\u0026rsquo;s forward to a more .complicated program:\nint h(int i) { return i; } int f(int i) { return h(i); } int main() { int i = ...; f(i); return 0; } Could you tell the sequence of this program?\nmain -\u0026gt; f -\u0026gt; h (return) -\u0026gt; f -\u0026gt; main\nIt is a stack structure, which we put main in the bottom first, then f, then h. When we want to return, we also have to pick from the top first: h, f then main.\nThe stack structure, which is defined as LIFO, Last In First Out, is widely use in algorithm, computer hardware, etc. We will gain a deeper sight of this in the following courses.\nHOW: How to write a Program? Begin with main() is a good habit From the knowledge we have learned above, every program contains a main() function.\nint main() { *sentence*; return 0; } We know that the return value of main() is not important. But why do we declare main as integer instead of other type like boolean bool?\nAt the beginning, I hope to improve the answer searching ability for everyone.\nFor the question why do we declare main function as int in c++?, we abstract the keywords: why declare(question) main(target 1) int(target 2) c++(field) Choose a platform for searching: Google, DuckDuckGo, Stack Overflow, and other forums. Type in the keywords and search. More about how to get the answer: How To Ask Questions The Smart Way After several searching, you might find the answer: The short answer, is because the C++ standard requires main() to return int . As you probably know, the return value from the main() function is used by the runtime library as the exit code for the process. Both Unix and Win32 support the concept of a (small) integer returned from a process after it has finished.\nIn short, this is a regulation when C++ was created. When program return 0 everything goes well.\nI use this case to emphasize that the purpose of my blog is not finding answer but getting better understanding and logic for specific knowledge. I hope everyone could follow How To Ask Questions The Smart Way before asking questions.\nThe first thing to understand is that hackers actually like hard problems and good, thought-provoking questions about them. If we didn\u0026rsquo;t, we wouldn\u0026rsquo;t be here. If you give us an interesting question to chew on we\u0026rsquo;ll be grateful to you; good questions are a stimulus and a gift. Good questions help us develop our understanding, and often reveal problems we might not have noticed or thought about otherwise. Among hackers, “Good question!” is a strong and sincere compliment.\nNow, we know how to create a structure of a program, then what about calculation?\nArithmetic Basic + - * / could be use directly. E.g. int a = 5 - 3;, float b = 3 / 6 (float is a type could store float number). But notice that / still cannot divide with 0. Although there is no CE, but RE will happen while running the program. = We have clarified that = is not equal but assign as an arithmetic. Mod calculation: %. E.g. int a = 8 % 3; // a equals 2 (// is a comment sign. The content after // will not be compiled and run. /*content*/ is similar to //, but you can comment for several lines.) Practice As the first practice, I will declare that how to use practice to improve ourselves.\nPractice has three levels: KNOW, UNDERSTAND, MASTER\nKNOW focuses on the content itself of the posts, which is necessary for basis. Figuring out KNOW means that you fully read the post in this course. If you cannot solve KNOW, please read the post carefully again without distraction. UNDERSTAND makes some modification with content itself and parameters, which is necessary for next learning. Figuring out UNDERSTAND means that you gain your own understanding while reading the post. If you cannot solve UNDERSTAND, please conclude the post and find out what you miss in this course, you could ask search engine for help as well. MASTER explores deeper into knowledge and content, which is necessary for mastering C++ and next learning for algorithm. Figuring out MASTER means that you get every point of the post and build your would logical system of learning C++. If you cannot solve MASTER, you could read the answer directly and then understand how the answer works. After that, re-answer the question again. KNOW int f(int x) { return x * 2; } int main() { int a = 1; a = f(a); return 0; } Find the value of a.\na equals 2.\nUNDERSTAND int h(int x){ return 1; } int g(int x){ return h(x); } int f(int x){ return g(h(x)); } int main(){ int a = 7; a = f(a); return 0; } Find the sequence of the functions and value of a\nmain -\u0026gt; f -\u0026gt; h(brackets have a higher privilege for calculation) -\u0026gt; g -\u0026gt; h(return) -\u0026gt; g -\u0026gt; f -\u0026gt; main\na equals 1.\nMASTER Write a function switch(int a, int b) that could switch the value stored in a and b, then returns a.\nint switch(int a, int b){ int c = a; a = b; b = c; return a; } ","date":"2023-02-20T00:00:00Z","permalink":"https://zayn7lie.github.io/posts/cpp-algorithm/basic-01function/","title":"C++ Basic - 01 Function"},{"content":"Test _Test Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://docs.stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","permalink":"https://zayn7lie.github.io/posts/misc/blog_constr/","title":"Blog Constructing"}]